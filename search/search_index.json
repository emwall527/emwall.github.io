{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Embedded Systems Design Project II","text":"<p>Hello Welcome to my page! My work will be updated periodically as I complete it below.</p>","tags":["tag1","tag2"]},{"location":"#individual-assignments","title":"Individual Assignments","text":"<p>Block Diagram</p> <p>Component Selection</p> <p>Schematic</p> <p>BOM/Power Budget</p>","tags":["tag1","tag2"]},{"location":"BOM-%26-Power-Budget/","title":"Bill of Materials &amp; Power Budget","text":""},{"location":"BOM-%26-Power-Budget/#bill-of-materials-last-edited-2252025","title":"Bill of Materials (Last Edited: 2/25/2025)","text":""},{"location":"BOM-%26-Power-Budget/#description","title":"Description","text":"<p>The bill of materials lists all components across documents, including their quantity, model number, and manufacturer. It will be updated as final part selections are made. For certain components, such as resistors, bulk ordering will be used to simplify procurement and reduce the need for individual orders. To ensure seamless integration, all resistors will be kept at a consistent size regardless of the final selection.</p> <p></p>"},{"location":"BOM-%26-Power-Budget/#power-budget-last-edited-2252025","title":"Power Budget (Last Edited: 2/25/2025)","text":""},{"location":"BOM-%26-Power-Budget/#description_1","title":"Description","text":"<p>To ensure sufficient power delivery for all required hardware, I have generated this power budget to illustrate the power allocation necessary to operate key components. The primary power draw comes from the Vybronics DC motor when in motion, while the PIC18F27/47Q10 and SunLED contribute minor consumption.</p> <p></p> <p>Made: 2/25/2025</p>"},{"location":"Block-Diagram/","title":"Block Diagram","text":""},{"location":"Block-Diagram/#description","title":"Description","text":"<p>Below is the block diagram for my individual subsystem,this subsytem recieves the signal for changing the wind speed and indicating what the wind speed is at.</p>"},{"location":"Block-Diagram/#diagram-last-edited-2252025","title":"Diagram (Last Edited: 2/25/2025)","text":"<p>Made: 1/31/2025</p> <p>Back to Home</p>"},{"location":"Component-Selection/","title":"Component Selection","text":"<p>This page documents my component selection process, including the options considered for each major subsystem and the reasoning behind my choices for supporting hardware. Due to project requirements, only surface-mount components will be considered.</p>"},{"location":"Component-Selection/#subsystem-functionality","title":"Subsystem Functionality","text":"<p>My role in our team's simulated wind tunnel project is to manage the airspeed display. The system includes a small airplane on a pivot with streamers to visualize airflow, along with a 7-segment display that indicates wind speed. The wind speed values are controlled by an operator using dials. To ensure seamless communication between subsystems, our team has chosen to use UART, forwarding messages with headers to identify their sources. Since response time is not critical, this approach should work as long as each microcontroller has enough data storage to queue and transmit the necessary information.</p>"},{"location":"Component-Selection/#microcontroller-selection-last-edited-272025","title":"Microcontroller Selection (Last Edited: 2/7/2025)","text":"Solution Image Pros Cons Datasheet PIC18F47Q10 TQFP/44 - High Memory  - Rich Peripherals  - Hardware CLC - Higher Power Consumption  - More Expensive  - More Complex to Program Datasheet MC9S08PA32AVLCR - Efficient 8-bit Performance  - Integrated Peripherials  - Lower Cost - Limited Memory  - Slower Processing  - Limited Community Support Datasheet ATTINY202-SSFR - Ultra Low Power  - Compact Package  - Simple Programming - Limited Memory  - Minimal Peripherals  - Lower Processing Datasheet <p>Selection: I chose the PIC18F47Q10 (TQFP/44) for my airspeed display because its successful integration with other systems will largely determine the projects scope. The availability of both provided and sourced information will be crucial to the final system's functionality. Additionaly, using the same microcontroller as other students provides access to broader knowledge base, and the labs leading up to the final project will help refine my skills with this specific controller.</p>"},{"location":"Component-Selection/#anemometer-last-edited-2202025","title":"Anemometer (Last Edited: 2/20/2025)","text":"<p>Explanation: Our team plans to build a custom anemometer for our project, designed to measure the speed of the fan in our wind tunnel. The component selection will include a motor which is needed for the anemometer, because we want the motor to be spinning from our provided wind speed so we can read the input and convert the motor readings to wind speed as the output.</p> Solution Image Pros Cons Datasheet VQ4TL2BQ380001 - High RPM  - Compact size  - Low voltage operation - Low torque  - No built-in gearing  - High RPM (Might require more circuitry to handle) Datasheet ROB-11696 - Moderate RPM  - Reliable performance  - Suitable for general applications - May require higher wind speeds  - Higher voltage  - Slightly larger Datasheet FIT0564 - Built-in gearbox increases torque  - Lower no-load RPM  - Can handle a wider range of applications - May not see changes in wind speed  - Larger size compared to other motors  - Requires more power Datasheet <p>Selection: The Vybronics VQ4TL2BQ380001 motor was chosen because of its high RPM (24,927 RPM), which makes it highly responsive to changes in wind speed. Its compact size allows for easy integration into our anemometer design without adding unnecessary weight or bulk. Additionally, its low operating voltage (3VDC) ensures efficient power use while still generating a measurable voltage output for wind speed calculations.</p>"},{"location":"Component-Selection/#oled-last-edited-272025","title":"OLED (Last Edited: 2/7/2025)","text":"Solution Image Pros Cons Datasheet XDCBD14A - Bright Illumination  - Standard 10-DIP  - Moderate Power Consumption - Single-digit Display  - Common anode configuration may not be compatible with all driver circuits  - Limited viewing angle Datasheet COM-13999 - RGB capability  - Dual-digit design  - Standard 14-DIP - Higher Power consumption  - More complex control circuitry  - Slightly larger footprint Datasheet TDCR1050M - Four-digit display  - Compact design  - Low forward voltage - Smaller digit size  - Red illumination  - Common anode configuration Datasheet <p>Selection: I chose the XDCBD14A for my airspeed display because its blue LED segments provide high visibility, ensuring that airspeed values are easy to read in various lighting conditions. The 0.56\" digit size offers a good balance between readablitiy and compactness, making it a suitable choice for my system. Additionally, the common anode configuration allows for flexible interfacing with standard driver circuits.</p> <p>Made: 2/7/2025</p> <p>Back to Home</p>"},{"location":"Schematic/","title":"Schematic","text":""},{"location":"Schematic/#description","title":"Description","text":"<p>This schematic represents the individual board design based on our team's assigned block diagram. The design integrates a PIC18F46K40-I/PT microcontroller with key peripherals, enabling efficient data processing and communication.</p>"},{"location":"Schematic/#schematic-last-updated2212025","title":"Schematic (Last Updated:2/21/2025)","text":"<p>Made: 2/21/2025</p> <p>Back to Home</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}